A)How did viewing a diff between two versions of a file help you see the bug that was introduced?

  1.cd the directory that contains the documents you want to compare with.

  2.diff -u name.html name2.html

    then you will see there were some linew at the top. They are showing   that you're comparing favorite-app-old.html to favorite.html.

    Ones with no plus and minus sugn next to them havn't changed, they existed in both two versions.
 
    Lines with a minus sign were removed.
    Lines with a plus sign were added, so vice versa.


B)How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
  
  every time you changed your file, the specific parts you have just changed would be makred in order to compare to the  older one. If necessary, we can just add some comments declaring what we have changed in different versions of file.


C)What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
  
  pros_manually creating a commit:
       can control the versions by ourself makes the whole history more controlable
  cons_manually creating a commit:
       Human sometimes are careless. some big or small commit may happend.

  pros_automatically creating a commit:
       convinient, can leave a version each time you change it, which backs up the document.
  cons_automatically creating a commit:
       hard to control, some changes may huge/small compared to the old version.


D)Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
   Some files releated code need to keep trace each other.


F)How can you use the commands git log and git diff to view the history of files?
   1.  git clone urlName
   2.1 git log --stat (more detailed information about which files are changed, how many lines are added or deleted)
   2.2 git log 
   3.  git diff fileCommitId1 fileCommitId2(2.1 + which lines are deleted or added)
   
Eï¼‰How might using version control make you more confident to make changes that could break something?
   I can compare easily web interfaces easily through checkout.
   I can commit each version that I think useful.
   compare the commits by looking deeply in the codes.
   git checkout commitID

F)Now that you have your workspace set up, what do you want to try using Git for?
   build responsitry and branch?